Best parameters set found on development set:

{'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}

Grid scores on development set:

0.945 (+/-0.029) for {'C': 1, 'kernel': 'linear'}
0.945 (+/-0.029) for {'C': 10, 'kernel': 'linear'}
0.945 (+/-0.029) for {'C': 100, 'kernel': 'linear'}
0.945 (+/-0.029) for {'C': 1000, 'kernel': 'linear'}
0.945 (+/-0.029) for {'C': 1, 'degree': 1, 'gamma': 1, 'kernel': 'poly'}
0.954 (+/-0.021) for {'C': 1, 'degree': 1, 'gamma': 0.1, 'kernel': 'poly'}
0.953 (+/-0.025) for {'C': 1, 'degree': 1, 'gamma': 0.01, 'kernel': 'poly'}
0.934 (+/-0.033) for {'C': 1, 'degree': 1, 'gamma': 0.001, 'kernel': 'poly'}
0.858 (+/-0.041) for {'C': 1, 'degree': 1, 'gamma': 0.0001, 'kernel': 'poly'}
0.974 (+/-0.019) for {'C': 1, 'degree': 2, 'gamma': 1, 'kernel': 'poly'}
0.974 (+/-0.019) for {'C': 1, 'degree': 2, 'gamma': 0.1, 'kernel': 'poly'}
0.969 (+/-0.023) for {'C': 1, 'degree': 2, 'gamma': 0.01, 'kernel': 'poly'}
0.832 (+/-0.029) for {'C': 1, 'degree': 2, 'gamma': 0.001, 'kernel': 'poly'}
0.812 (+/-0.037) for {'C': 1, 'degree': 2, 'gamma': 0.0001, 'kernel': 'poly'}
0.966 (+/-0.020) for {'C': 1, 'degree': 3, 'gamma': 1, 'kernel': 'poly'}
0.966 (+/-0.020) for {'C': 1, 'degree': 3, 'gamma': 0.1, 'kernel': 'poly'}
0.949 (+/-0.022) for {'C': 1, 'degree': 3, 'gamma': 0.01, 'kernel': 'poly'}
0.715 (+/-0.279) for {'C': 1, 'degree': 3, 'gamma': 0.001, 'kernel': 'poly'}
0.715 (+/-0.279) for {'C': 1, 'degree': 3, 'gamma': 0.0001, 'kernel': 'poly'}
0.945 (+/-0.029) for {'C': 10, 'degree': 1, 'gamma': 1, 'kernel': 'poly'}
0.945 (+/-0.029) for {'C': 10, 'degree': 1, 'gamma': 0.1, 'kernel': 'poly'}
0.954 (+/-0.021) for {'C': 10, 'degree': 1, 'gamma': 0.01, 'kernel': 'poly'}
0.953 (+/-0.025) for {'C': 10, 'degree': 1, 'gamma': 0.001, 'kernel': 'poly'}
0.934 (+/-0.033) for {'C': 10, 'degree': 1, 'gamma': 0.0001, 'kernel': 'poly'}
0.974 (+/-0.019) for {'C': 10, 'degree': 2, 'gamma': 1, 'kernel': 'poly'}
0.974 (+/-0.019) for {'C': 10, 'degree': 2, 'gamma': 0.1, 'kernel': 'poly'}
0.976 (+/-0.017) for {'C': 10, 'degree': 2, 'gamma': 0.01, 'kernel': 'poly'}
0.927 (+/-0.040) for {'C': 10, 'degree': 2, 'gamma': 0.001, 'kernel': 'poly'}
0.812 (+/-0.037) for {'C': 10, 'degree': 2, 'gamma': 0.0001, 'kernel': 'poly'}
0.966 (+/-0.020) for {'C': 10, 'degree': 3, 'gamma': 1, 'kernel': 'poly'}
0.966 (+/-0.020) for {'C': 10, 'degree': 3, 'gamma': 0.1, 'kernel': 'poly'}
0.967 (+/-0.021) for {'C': 10, 'degree': 3, 'gamma': 0.01, 'kernel': 'poly'}
0.826 (+/-0.028) for {'C': 10, 'degree': 3, 'gamma': 0.001, 'kernel': 'poly'}
0.715 (+/-0.279) for {'C': 10, 'degree': 3, 'gamma': 0.0001, 'kernel': 'poly'}
0.945 (+/-0.029) for {'C': 100, 'degree': 1, 'gamma': 1, 'kernel': 'poly'}
0.945 (+/-0.029) for {'C': 100, 'degree': 1, 'gamma': 0.1, 'kernel': 'poly'}
0.945 (+/-0.029) for {'C': 100, 'degree': 1, 'gamma': 0.01, 'kernel': 'poly'}
0.954 (+/-0.021) for {'C': 100, 'degree': 1, 'gamma': 0.001, 'kernel': 'poly'}
0.953 (+/-0.025) for {'C': 100, 'degree': 1, 'gamma': 0.0001, 'kernel': 'poly'}
0.974 (+/-0.019) for {'C': 100, 'degree': 2, 'gamma': 1, 'kernel': 'poly'}
0.974 (+/-0.019) for {'C': 100, 'degree': 2, 'gamma': 0.1, 'kernel': 'poly'}
0.974 (+/-0.019) for {'C': 100, 'degree': 2, 'gamma': 0.01, 'kernel': 'poly'}
0.969 (+/-0.023) for {'C': 100, 'degree': 2, 'gamma': 0.001, 'kernel': 'poly'}
0.832 (+/-0.029) for {'C': 100, 'degree': 2, 'gamma': 0.0001, 'kernel': 'poly'}
0.966 (+/-0.020) for {'C': 100, 'degree': 3, 'gamma': 1, 'kernel': 'poly'}
0.966 (+/-0.020) for {'C': 100, 'degree': 3, 'gamma': 0.1, 'kernel': 'poly'}
0.966 (+/-0.020) for {'C': 100, 'degree': 3, 'gamma': 0.01, 'kernel': 'poly'}
0.893 (+/-0.035) for {'C': 100, 'degree': 3, 'gamma': 0.001, 'kernel': 'poly'}
0.715 (+/-0.279) for {'C': 100, 'degree': 3, 'gamma': 0.0001, 'kernel': 'poly'}
0.945 (+/-0.029) for {'C': 1000, 'degree': 1, 'gamma': 1, 'kernel': 'poly'}
0.945 (+/-0.029) for {'C': 1000, 'degree': 1, 'gamma': 0.1, 'kernel': 'poly'}
0.945 (+/-0.029) for {'C': 1000, 'degree': 1, 'gamma': 0.01, 'kernel': 'poly'}
0.945 (+/-0.029) for {'C': 1000, 'degree': 1, 'gamma': 0.001, 'kernel': 'poly'}
0.954 (+/-0.021) for {'C': 1000, 'degree': 1, 'gamma': 0.0001, 'kernel': 'poly'}
0.974 (+/-0.019) for {'C': 1000, 'degree': 2, 'gamma': 1, 'kernel': 'poly'}
0.974 (+/-0.019) for {'C': 1000, 'degree': 2, 'gamma': 0.1, 'kernel': 'poly'}
0.974 (+/-0.019) for {'C': 1000, 'degree': 2, 'gamma': 0.01, 'kernel': 'poly'}
0.976 (+/-0.017) for {'C': 1000, 'degree': 2, 'gamma': 0.001, 'kernel': 'poly'}
0.927 (+/-0.040) for {'C': 1000, 'degree': 2, 'gamma': 0.0001, 'kernel': 'poly'}
0.966 (+/-0.020) for {'C': 1000, 'degree': 3, 'gamma': 1, 'kernel': 'poly'}
0.966 (+/-0.020) for {'C': 1000, 'degree': 3, 'gamma': 0.1, 'kernel': 'poly'}
0.966 (+/-0.020) for {'C': 1000, 'degree': 3, 'gamma': 0.01, 'kernel': 'poly'}
0.949 (+/-0.022) for {'C': 1000, 'degree': 3, 'gamma': 0.001, 'kernel': 'poly'}
0.715 (+/-0.279) for {'C': 1000, 'degree': 3, 'gamma': 0.0001, 'kernel': 'poly'}
0.684 (+/-0.299) for {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
0.917 (+/-0.016) for {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
0.972 (+/-0.018) for {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
0.947 (+/-0.025) for {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
0.894 (+/-0.052) for {'C': 1, 'gamma': 0.0001, 'kernel': 'rbf'}
0.765 (+/-0.196) for {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
0.920 (+/-0.015) for {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
0.977 (+/-0.018) for {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
0.960 (+/-0.025) for {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
0.946 (+/-0.025) for {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
0.765 (+/-0.196) for {'C': 100, 'gamma': 1, 'kernel': 'rbf'}
0.920 (+/-0.015) for {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
0.977 (+/-0.018) for {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
0.960 (+/-0.020) for {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
0.956 (+/-0.027) for {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
0.765 (+/-0.196) for {'C': 1000, 'gamma': 1, 'kernel': 'rbf'}
0.920 (+/-0.015) for {'C': 1000, 'gamma': 0.1, 'kernel': 'rbf'}
0.977 (+/-0.018) for {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
0.960 (+/-0.019) for {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
0.953 (+/-0.026) for {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

              precision    recall  f1-score   support

         1.0       1.00      1.00      1.00       500
         2.0       1.00      1.00      1.00       500
         3.0       1.00      1.00      1.00       500
         4.0       1.00      1.00      1.00       500
         5.0       1.00      1.00      1.00       500

   micro avg       1.00      1.00      1.00      2500
   macro avg       1.00      1.00      1.00      2500
weighted avg       1.00      1.00      1.00      2500


Totally takes 31 min 14.000000 sec


---------------------------------------------------------------------------------------------------------



Best parameters set found on development set:

{'C': 2, 'gamma': 0.01, 'kernel': 'rbf'}

Grid scores on development set:

0.945 (+/-0.029) for {'C': 2, 'kernel': 'linear'}
0.945 (+/-0.029) for {'C': 5, 'kernel': 'linear'}
0.945 (+/-0.029) for {'C': 15, 'kernel': 'linear'}
0.945 (+/-0.029) for {'C': 20, 'kernel': 'linear'}
0.945 (+/-0.029) for {'C': 2, 'degree': 1, 'gamma': 1, 'kernel': 'poly'}
0.951 (+/-0.025) for {'C': 2, 'degree': 1, 'gamma': 0.1, 'kernel': 'poly'}
0.956 (+/-0.027) for {'C': 2, 'degree': 1, 'gamma': 0.01, 'kernel': 'poly'}
0.946 (+/-0.025) for {'C': 2, 'degree': 1, 'gamma': 0.001, 'kernel': 'poly'}
0.894 (+/-0.052) for {'C': 2, 'degree': 1, 'gamma': 0.0001, 'kernel': 'poly'}
0.974 (+/-0.019) for {'C': 2, 'degree': 2, 'gamma': 1, 'kernel': 'poly'}
0.974 (+/-0.019) for {'C': 2, 'degree': 2, 'gamma': 0.1, 'kernel': 'poly'}
0.975 (+/-0.017) for {'C': 2, 'degree': 2, 'gamma': 0.01, 'kernel': 'poly'}
0.857 (+/-0.046) for {'C': 2, 'degree': 2, 'gamma': 0.001, 'kernel': 'poly'}
0.812 (+/-0.037) for {'C': 2, 'degree': 2, 'gamma': 0.0001, 'kernel': 'poly'}
0.966 (+/-0.020) for {'C': 2, 'degree': 3, 'gamma': 1, 'kernel': 'poly'}
0.966 (+/-0.020) for {'C': 2, 'degree': 3, 'gamma': 0.1, 'kernel': 'poly'}
0.962 (+/-0.020) for {'C': 2, 'degree': 3, 'gamma': 0.01, 'kernel': 'poly'}
0.715 (+/-0.279) for {'C': 2, 'degree': 3, 'gamma': 0.001, 'kernel': 'poly'}
0.715 (+/-0.279) for {'C': 2, 'degree': 3, 'gamma': 0.0001, 'kernel': 'poly'}
0.945 (+/-0.029) for {'C': 5, 'degree': 1, 'gamma': 1, 'kernel': 'poly'}
0.945 (+/-0.029) for {'C': 5, 'degree': 1, 'gamma': 0.1, 'kernel': 'poly'}
0.954 (+/-0.024) for {'C': 5, 'degree': 1, 'gamma': 0.01, 'kernel': 'poly'}
0.951 (+/-0.025) for {'C': 5, 'degree': 1, 'gamma': 0.001, 'kernel': 'poly'}
0.921 (+/-0.040) for {'C': 5, 'degree': 1, 'gamma': 0.0001, 'kernel': 'poly'}
0.974 (+/-0.019) for {'C': 5, 'degree': 2, 'gamma': 1, 'kernel': 'poly'}
0.974 (+/-0.019) for {'C': 5, 'degree': 2, 'gamma': 0.1, 'kernel': 'poly'}
0.975 (+/-0.018) for {'C': 5, 'degree': 2, 'gamma': 0.01, 'kernel': 'poly'}
0.902 (+/-0.053) for {'C': 5, 'degree': 2, 'gamma': 0.001, 'kernel': 'poly'}
0.812 (+/-0.037) for {'C': 5, 'degree': 2, 'gamma': 0.0001, 'kernel': 'poly'}
0.966 (+/-0.020) for {'C': 5, 'degree': 3, 'gamma': 1, 'kernel': 'poly'}
0.966 (+/-0.020) for {'C': 5, 'degree': 3, 'gamma': 0.1, 'kernel': 'poly'}
0.965 (+/-0.019) for {'C': 5, 'degree': 3, 'gamma': 0.01, 'kernel': 'poly'}
0.744 (+/-0.303) for {'C': 5, 'degree': 3, 'gamma': 0.001, 'kernel': 'poly'}
0.715 (+/-0.279) for {'C': 5, 'degree': 3, 'gamma': 0.0001, 'kernel': 'poly'}
0.945 (+/-0.029) for {'C': 15, 'degree': 1, 'gamma': 1, 'kernel': 'poly'}
0.945 (+/-0.029) for {'C': 15, 'degree': 1, 'gamma': 0.1, 'kernel': 'poly'}
0.953 (+/-0.022) for {'C': 15, 'degree': 1, 'gamma': 0.01, 'kernel': 'poly'}
0.955 (+/-0.028) for {'C': 15, 'degree': 1, 'gamma': 0.001, 'kernel': 'poly'}
0.940 (+/-0.029) for {'C': 15, 'degree': 1, 'gamma': 0.0001, 'kernel': 'poly'}
0.974 (+/-0.019) for {'C': 15, 'degree': 2, 'gamma': 1, 'kernel': 'poly'}
0.974 (+/-0.019) for {'C': 15, 'degree': 2, 'gamma': 0.1, 'kernel': 'poly'}
0.975 (+/-0.019) for {'C': 15, 'degree': 2, 'gamma': 0.01, 'kernel': 'poly'}
0.936 (+/-0.037) for {'C': 15, 'degree': 2, 'gamma': 0.001, 'kernel': 'poly'}
0.812 (+/-0.037) for {'C': 15, 'degree': 2, 'gamma': 0.0001, 'kernel': 'poly'}
0.966 (+/-0.020) for {'C': 15, 'degree': 3, 'gamma': 1, 'kernel': 'poly'}
0.966 (+/-0.020) for {'C': 15, 'degree': 3, 'gamma': 0.1, 'kernel': 'poly'}
0.967 (+/-0.020) for {'C': 15, 'degree': 3, 'gamma': 0.01, 'kernel': 'poly'}
0.829 (+/-0.024) for {'C': 15, 'degree': 3, 'gamma': 0.001, 'kernel': 'poly'}
0.715 (+/-0.279) for {'C': 15, 'degree': 3, 'gamma': 0.0001, 'kernel': 'poly'}
0.945 (+/-0.029) for {'C': 20, 'degree': 1, 'gamma': 1, 'kernel': 'poly'}
0.945 (+/-0.029) for {'C': 20, 'degree': 1, 'gamma': 0.1, 'kernel': 'poly'}
0.951 (+/-0.025) for {'C': 20, 'degree': 1, 'gamma': 0.01, 'kernel': 'poly'}
0.956 (+/-0.027) for {'C': 20, 'degree': 1, 'gamma': 0.001, 'kernel': 'poly'}
0.946 (+/-0.025) for {'C': 20, 'degree': 1, 'gamma': 0.0001, 'kernel': 'poly'}
0.974 (+/-0.019) for {'C': 20, 'degree': 2, 'gamma': 1, 'kernel': 'poly'}
0.974 (+/-0.019) for {'C': 20, 'degree': 2, 'gamma': 0.1, 'kernel': 'poly'}
0.975 (+/-0.018) for {'C': 20, 'degree': 2, 'gamma': 0.01, 'kernel': 'poly'}
0.942 (+/-0.034) for {'C': 20, 'degree': 2, 'gamma': 0.001, 'kernel': 'poly'}
0.812 (+/-0.037) for {'C': 20, 'degree': 2, 'gamma': 0.0001, 'kernel': 'poly'}
0.966 (+/-0.020) for {'C': 20, 'degree': 3, 'gamma': 1, 'kernel': 'poly'}
0.966 (+/-0.020) for {'C': 20, 'degree': 3, 'gamma': 0.1, 'kernel': 'poly'}
0.967 (+/-0.020) for {'C': 20, 'degree': 3, 'gamma': 0.01, 'kernel': 'poly'}
0.837 (+/-0.033) for {'C': 20, 'degree': 3, 'gamma': 0.001, 'kernel': 'poly'}
0.715 (+/-0.279) for {'C': 20, 'degree': 3, 'gamma': 0.0001, 'kernel': 'poly'}
0.765 (+/-0.196) for {'C': 2, 'gamma': 1, 'kernel': 'rbf'}
0.920 (+/-0.015) for {'C': 2, 'gamma': 0.1, 'kernel': 'rbf'}
0.978 (+/-0.016) for {'C': 2, 'gamma': 0.01, 'kernel': 'rbf'}
0.951 (+/-0.025) for {'C': 2, 'gamma': 0.001, 'kernel': 'rbf'}
0.915 (+/-0.042) for {'C': 2, 'gamma': 0.0001, 'kernel': 'rbf'}
0.765 (+/-0.196) for {'C': 5, 'gamma': 1, 'kernel': 'rbf'}
0.920 (+/-0.015) for {'C': 5, 'gamma': 0.1, 'kernel': 'rbf'}
0.977 (+/-0.017) for {'C': 5, 'gamma': 0.01, 'kernel': 'rbf'}
0.956 (+/-0.029) for {'C': 5, 'gamma': 0.001, 'kernel': 'rbf'}
0.934 (+/-0.032) for {'C': 5, 'gamma': 0.0001, 'kernel': 'rbf'}
0.765 (+/-0.196) for {'C': 15, 'gamma': 1, 'kernel': 'rbf'}
0.920 (+/-0.015) for {'C': 15, 'gamma': 0.1, 'kernel': 'rbf'}
0.977 (+/-0.018) for {'C': 15, 'gamma': 0.01, 'kernel': 'rbf'}
0.961 (+/-0.024) for {'C': 15, 'gamma': 0.001, 'kernel': 'rbf'}
0.948 (+/-0.024) for {'C': 15, 'gamma': 0.0001, 'kernel': 'rbf'}
0.765 (+/-0.196) for {'C': 20, 'gamma': 1, 'kernel': 'rbf'}
0.920 (+/-0.015) for {'C': 20, 'gamma': 0.1, 'kernel': 'rbf'}
0.977 (+/-0.018) for {'C': 20, 'gamma': 0.01, 'kernel': 'rbf'}
0.961 (+/-0.023) for {'C': 20, 'gamma': 0.001, 'kernel': 'rbf'}
0.951 (+/-0.024) for {'C': 20, 'gamma': 0.0001, 'kernel': 'rbf'}

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

              precision    recall  f1-score   support

         1.0       1.00      1.00      1.00       500
         2.0       0.99      1.00      1.00       500
         3.0       0.99      1.00      1.00       500
         4.0       1.00      0.99      1.00       500
         5.0       1.00      1.00      1.00       500

   micro avg       1.00      1.00      1.00      2500
   macro avg       1.00      1.00      1.00      2500
weighted avg       1.00      1.00      1.00      2500


Totally takes 33 min 51.000000 sec
